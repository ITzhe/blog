[{"content":"拉取镜像\n1 ctr image pull docker.io/library/nginx:latest 查看容器\nctr image ls -q\r创建容器\nctr c create docker.io/library/nginx:latest nginx\r启动容器\nctr task start -d nginx\r直接启动容器（创建容器+启动容器）\nctr run -d --net-host nginx bash\r查看容器状态\nctr task ls\r进入容器\nctr task exec -t --exec-id 0 nginx /bin/bash\r停止容器\nctr task kill nginx\r暂停容器\nctr task pause nginx\r","date":"2023-03-02T17:44:11+08:00","permalink":"https://caizhe.org/p/containerd%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","title":"Containerd常用命令"},{"content":"1、下载依赖安装包\n1 2 3 wget https://github.com/containerd/containerd/releases/download/v1.5.5/cri-containerd-cni-1.5.5-linux-amd64.tar.gz # 如果无法访问github可以使用下面地址 # wget https://download.fastgit.org/containerd/containerd/releases/download/v1.5.5/cri-containerd-cni-1.5.5-linux-amd64.tar.gz 2、解压\n1 tar -C / -xzf cri-containerd-cni-1.5.5-linux-amd64.tar.gz 3、添加配置文件：\n默认配置文件为 /etc/containerd/config.toml，我们可以通过如下所示的命令生成\n1 2 mkdir -p /etc/containerd containerd config default \u0026gt; /etc/containerd/config.toml 4、启动containerd\n1 systemctl enable containerd --now 5、验证containerd\n1 2 3 4 5 6 7 8 9 10 # ctr version Client: Version: v1.5.5 Revision: 72cec4be58a9eb6b2910f5d10f1c01ca47d231c0 Go version: go1.16.6 Server: Version: v1.5.5 Revision: 72cec4be58a9eb6b2910f5d10f1c01ca47d231c0 UUID: 38613830-5cd0-4bc4-81b4-2bcdced721d3 ","date":"2023-03-01T17:44:11+08:00","permalink":"https://caizhe.org/p/containerd%E5%AE%89%E8%A3%85/","title":"Containerd安装"},{"content":"1、首先需要关闭远程仓库的分支保护，允许强制推送：\n\u0026ldquo;Settings\u0026rdquo; -\u0026gt; \u0026ldquo;Repository\u0026rdquo; -\u0026gt; scroll down to \u0026ldquo;Protected branches\u0026rdquo;.\n2、克隆项目,拉取所有分支：\n1 2 3 4 5 git clone xxx # 默认拉取master分支 cd xx #进入拉取的文件夹 git branch -r | grep -v \u0026#39;\\-\u0026gt;\u0026#39; | while read remote; do git branch --track \u0026#34;${remote#origin/}\u0026#34; \u0026#34;$remote\u0026#34;; done git fetch --all git pull --all 3、查找大文件（将最大的10个文件查询下来）\n1 git rev-list --objects --all | grep \u0026#34;$(git verify-pack -v .git/objects/pack/*.idx | sort -k 3 -n | tail -10 | awk \u0026#39;{print$1}\u0026#39;)\u0026#34; 4、清理查找的大文件（一次只能处理一个文件/文件夹）：\n1 git filter-branch --force --index-filter \u0026#39;git rm -rf --cached --ignore-unmatch 目录/文件\u0026#39; --prune-empty --tag-name-filter cat -- --all 5、删除并回收空间\n1 2 3 4 5 git for-each-ref --format=\u0026#39;delete %(refname)\u0026#39; refs/original | git update-ref --stdin rm -rf .git/refs/original/ git reflog expire --expire=now --all git gc --prune=now git gc --aggressive --prune=now 6、推送远程仓库：\n1 2 git push origin --force --all git remote prune origin 然后其他人重新克隆项目即可\n参考链接：https://www.msnao.com/2021/06/15/5031.html\n","date":"2023-03-01T17:44:11+08:00","permalink":"https://caizhe.org/p/gitlab%E5%A4%A7%E6%96%87%E4%BB%B6%E6%B8%85%E7%90%86/","title":"Gitlab大文件清理"}]